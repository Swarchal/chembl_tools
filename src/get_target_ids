#!/usr/bin/env python

def get_options():
    import argparse

    description = 'Retrieve uniprot IDs from CHEMBL IDs'
    parser = argparse.ArgumentParser(description=description,
                                     prog='get_target_ids')

    parser.add_argument('chembl', action='store',
                        help='Chembl IDs input file [name -> chembl id]')
    
    parser.add_argument('--organism', action='store',
                        default='Homo sapiens',
                        help='Restrict results to this organism [Default: "Homo sapiens"]')

    return parser.parse_args()

if __name__ == "__main__":
    options = get_options()

    import sys
    if sys.version[0] != '2':
        sys.stderr.write('Python version 2 is required\n')
        sys.exit(1)

    from chembl_webresource_client.new_client import new_client
    
    compounds2targets = {}
    header = True
    for name, chembl in [(x.split('\t')[0], x.rstrip().split('\t')[1])
                         for x in open(options.chembl)]:
        if header:
            header = False
            continue
        compounds2targets[chembl] = set()

    chunk_size = 50
    keys = compounds2targets.keys()

    for i in range(0, len(keys), chunk_size):
        activities = new_client.activity.filter(molecule_chembl_id__in=keys[i:i + chunk_size])
        for act in activities:
            compounds2targets[act['molecule_chembl_id']].add(act['target_chembl_id'])

    for key, val in compounds2targets.items():
        lval = list(val)
        uniprots = set()
        for i in range(0, len(val), chunk_size):
            targets = new_client.target.filter(target_chembl_id__in=lval[i:i + chunk_size]).filter(organism__istartswith=options.organism)
            uniprots |= set(sum([[comp['accession'] for comp in t['target_components']] for t in targets],[]))
        compounds2targets[key] = uniprots

    print('\t'.join(('chembl', 'target')))
    for chembl in sorted(compounds2targets):
        for uniprot in compounds2targets[chembl]:
            print('\t'.join((chembl, uniprot)))
